{"mappings":"AEqCE,4WAQA,qTAaA,iEEuEA,seAeA,mFAIA,qFAKA,0EAIA,8DAIA,+LAOA,+PAQA,qIAIA,8CAGA,4FCvEA","sources":["index.6a81de11.css","node_modules/buttoncomp/dist/buttoncomp.css","node_modules/buttoncomp/dist/ButtonComp.vue","node_modules/inputcomp/dist/inputcomp.css","node_modules/inputcomp/dist/InputComp.vue","src/App.vue"],"sourcesContent":[":root {\n  --button_comp_font_family: Verdana, serif;\n  --button_comp_font_size: 1rem;\n  --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\n  --button_comp_color: #ffffffe6;\n  --button_comp_box_shadow: 4px 4px 6px 1px #0006, 2px 2px 2px 0 #0003;\n  --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\n}\n\n.buttonComp {\n  width: max-content;\n  height: max-content;\n  text-align: center;\n  cursor: pointer;\n  font-family: var(--button_comp_font_family);\n  font-size: var(--button_comp_font_size);\n  background: var(--button_comp_background);\n  color: var(--button_comp_color);\n  box-shadow: var(--button_comp_box_shadow);\n  border-radius: 5px;\n  padding: .5rem;\n}\n\n.buttonComp:hover {\n  background: var(--button_comp_hover_background);\n}\n\n:root {\n  --input_comp_width: 10rem;\n  --input_comp_font_family: Verdana, serif;\n  --input_comp_heading_color: black;\n  --input_comp_heading_font_size: 1rem;\n  --input_comp_heading_font_weight: bold;\n  --input_comp_input_font_size: .8rem;\n  --input_comp_input_font_weight: normal;\n  --input_comp_input_color: black;\n  --input_comp_input_background: transparent;\n  --input_comp_input_border_color: black;\n  --input_comp_input_placeholder_color: black;\n  --input_comp_input_focus_outline: yellow;\n  --input_comp_input_focus_background: white;\n}\n\n.inputComp {\n  width: var(--input_comp_width);\n  font-family: var(--input_comp_font_family);\n}\n\n.inputComp_containerBox__above {\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n}\n\n.inputComp_containerBox__below {\n  flex-direction: column-reverse;\n  display: flex;\n}\n\n.inputComp_containerBox__left {\n  flex-direction: row;\n  display: flex;\n}\n\n.inputComp_headerBox {\n  text-align: center;\n  color: var(--input_comp_heading_color);\n  font-size: var(--input_comp_heading_font_size);\n  font-weight: var(--input_comp_heading_font_weight);\n  align-self: center;\n}\n\n.inputComp_input {\n  color: var(--input_comp_input_color);\n  background: var(--input_comp_input_background);\n  border-color: var(--input_comp_input_border_color);\n  font-size: var(--input_comp_input_font_size);\n  font-weight: var(--input_comp_input_font_weight);\n  padding: .4rem;\n}\n\n.inputComp_input:focus {\n  outline-color: var(--input_comp_input_focus_outline);\n  background-color: var(--input_comp_input_focus_background);\n}\n\n.inputComp_input:invalid {\n  background-color: red;\n}\n\n.inputComp_input::-webkit-input-placeholder {\n  color: var(--input_comp_input_placeholder_color);\n}\n\n#controlsDiv[data-v-cbf137] {\n  width: 1100px;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 20px;\n  display: flex;\n}\n\n/*# sourceMappingURL=index.6a81de11.css.map */\n",":root {\n  --button_comp_font_family: Verdana, serif;\n  --button_comp_font_size: 1rem;\n  --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\n  --button_comp_color: #ffffffe6;\n  --button_comp_box_shadow: 4px 4px 6px 1px #0006, 2px 2px 2px 0 #0003;\n  --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\n}\n\n.buttonComp {\n  width: max-content;\n  height: max-content;\n  text-align: center;\n  cursor: pointer;\n  font-family: var(--button_comp_font_family);\n  font-size: var(--button_comp_font_size);\n  background: var(--button_comp_background);\n  color: var(--button_comp_color);\n  box-shadow: var(--button_comp_box_shadow);\n  border-radius: 5px;\n  padding: .5rem;\n}\n\n.buttonComp:hover {\n  background: var(--button_comp_hover_background);\n}\n\n","<template>\r\n  <div \r\n    class=\"buttonComp\"\r\n    @click=\"div_clicked($event)\"\r\n  >\r\n    <slot />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'ButtonComp',\r\n    props: {\r\n      cssVariables: {\r\n        type: Object,\r\n        default: null\r\n      }\r\n    },\r\n    emits: {\r\n      'buttonCompClicked': null\r\n    },\r\n    mounted() {\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      div_clicked: function(event){\r\n        this.$emit('buttonCompClicked',event);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --button_comp_font_family: Verdana,serif;\r\n    --button_comp_font_size: 1rem;\r\n    --button_comp_background: linear-gradient(to bottom, #969696 0, #969696 13%, #5f5f5f 33%, #1e1e1e 64%, #1e1e1e 100%);\r\n    --button_comp_color: rgba(255, 255, 255, 0.901961);\r\n    --button_comp_box_shadow: 4px 4px 6px 1px rgba(0, 0, 0, 0.4) , 2px 2px 2px 0 rgba(0,0,0,0.2);\r\n    --button_comp_hover_background: linear-gradient(to bottom, #969696 0, #1e1e1e 100%);\r\n  }\r\n  .buttonComp {\r\n    width: max-content;\r\n    height: max-content;\r\n    text-align: center;\r\n    cursor: pointer;\r\n    padding: 0.5rem;\r\n    border-radius: 5px;\r\n    font-family: var(--button_comp_font_family);\r\n    font-size: var(--button_comp_font_size);\r\n    background: var(--button_comp_background);\r\n    color: var(--button_comp_color);\r\n    box-shadow: var(--button_comp_box_shadow);\r\n  }\r\n  .buttonComp:hover {\r\n    background: var(--button_comp_hover_background);\r\n  }\r\n</style>",":root {\n  --input_comp_width: 10rem;\n  --input_comp_font_family: Verdana, serif;\n  --input_comp_heading_color: black;\n  --input_comp_heading_font_size: 1rem;\n  --input_comp_heading_font_weight: bold;\n  --input_comp_input_font_size: .8rem;\n  --input_comp_input_font_weight: normal;\n  --input_comp_input_color: black;\n  --input_comp_input_background: transparent;\n  --input_comp_input_border_color: black;\n  --input_comp_input_placeholder_color: black;\n  --input_comp_input_focus_outline: yellow;\n  --input_comp_input_focus_background: white;\n}\n\n.inputComp {\n  width: var(--input_comp_width);\n  font-family: var(--input_comp_font_family);\n}\n\n.inputComp_containerBox__above {\n  flex-direction: column;\n  align-items: center;\n  display: flex;\n}\n\n.inputComp_containerBox__below {\n  flex-direction: column-reverse;\n  display: flex;\n}\n\n.inputComp_containerBox__left {\n  flex-direction: row;\n  display: flex;\n}\n\n.inputComp_headerBox {\n  text-align: center;\n  color: var(--input_comp_heading_color);\n  font-size: var(--input_comp_heading_font_size);\n  font-weight: var(--input_comp_heading_font_weight);\n  align-self: center;\n}\n\n.inputComp_input {\n  color: var(--input_comp_input_color);\n  background: var(--input_comp_input_background);\n  border-color: var(--input_comp_input_border_color);\n  font-size: var(--input_comp_input_font_size);\n  font-weight: var(--input_comp_input_font_weight);\n  padding: .4rem;\n}\n\n.inputComp_input:focus {\n  outline-color: var(--input_comp_input_focus_outline);\n  background-color: var(--input_comp_input_focus_background);\n}\n\n.inputComp_input:invalid {\n  background-color: red;\n}\n\n.inputComp_input::-webkit-input-placeholder {\n  color: var(--input_comp_input_placeholder_color);\n}\n\n","<template>\r\n  <div class=\"inputComp\">\r\n    <div :class=\"compute_container_class()\">\r\n      <div\r\n        v-show=\"heading\"\r\n        class=\"inputComp_headerBox\"\r\n        :style=\"header_style\"\r\n      >\r\n        {{ heading }}\r\n      </div>\r\n      <input\r\n        v-model=\"currentValue\"\r\n        class=\"inputComp_input\"\r\n        :size=\"inputSize\"\r\n        :type=\"inputType\"\r\n        :style=\"input_box_style\"\r\n        :placeholder=\"placeholder\"\r\n        :checked=\"inputChecked\"\r\n        @change=\"valueChanged\"\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  export default {\r\n    name: 'InputComp',\r\n    props: {\r\n      heading: {\r\n        type: String,\r\n        default: null\r\n      },\r\n      // eslint-disable-next-line vue/require-prop-types\r\n      inputValue: {\r\n        default: null\r\n      },\r\n      inputChecked: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      inputType: {\r\n        type: String,\r\n        default: 'text'\r\n      },\r\n      placeholder: {\r\n        type: String,\r\n        default: 'Enter a value'\r\n      },\r\n      inputSize: {\r\n        type: String,\r\n        default: '40'\r\n      },\r\n      headerPosition: {\r\n        type: String,\r\n        default: 'left'\r\n      },\r\n      singleBorder: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      cssVariables: {\r\n        type: Object,\r\n        default: () => {\r\n          return null;\r\n        }\r\n      }\r\n    },\r\n    emits: {\r\n      'inputCompValueChanged': null\r\n    },\r\n    data(){\r\n      return {\r\n        currentValue: this.inputValue\r\n      }\r\n    },\r\n    computed: {\r\n      header_style: function(){\r\n        let header_margin = null;\r\n        if(this.headerPosition === 'left'){\r\n          header_margin = 'margin-right: 5px;';\r\n        }else if(this.headerPosition === 'below'){\r\n          header_margin = 'margin-top: 2px;';\r\n        }\r\n        return header_margin;\r\n      },\r\n      input_box_style: function(){\r\n        let box_style = null;\r\n        if(this.singleBorder){\r\n          box_style = 'border: none; border-bottom: 1px solid;';\r\n        }else{\r\n          box_style = 'border: 1px solid;';\r\n        }\r\n\r\n        if(this.inputType === 'number'){\r\n          box_style = `${box_style}width: ${this.inputSize}px;`;\r\n        }\r\n        return box_style;\r\n      }\r\n    },\r\n    watch: {\r\n      inputValue(inputValue){\r\n        this.currentValue = inputValue;\r\n      }\r\n    },\r\n    mounted(){\r\n      if(this.cssVariables !== null){\r\n        for(let key of Object.keys(this.cssVariables)){\r\n          this.$el.style.setProperty(`--${key}`, this.cssVariables[key]);\r\n        }\r\n      }\r\n    },\r\n    methods: {\r\n      valueChanged: function(){\r\n        this.$emit('inputCompValueChanged', this.currentValue);\r\n      },\r\n      compute_container_class: function() {\r\n        if(this.headerPosition === 'left'){\r\n          return 'inputComp_containerBox__left';\r\n        }else if(this.headerPosition === 'above'){\r\n          return 'inputComp_containerBox__top';\r\n        }else if(this.headerPosition === 'below'){\r\n          return 'inputComp_containerBox__below';\r\n        }\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  :root {\r\n    --input_comp_width: 10rem;\r\n    --input_comp_font_family: Verdana,serif;\r\n    --input_comp_heading_color: black;\r\n    --input_comp_heading_font_size: 1rem;\r\n    --input_comp_heading_font_weight: bold;\r\n    --input_comp_input_font_size: 0.8rem;\r\n    --input_comp_input_font_weight: normal;\r\n    --input_comp_input_color: black;\r\n    --input_comp_input_background: transparent;\r\n    --input_comp_input_border_color: black;\r\n    --input_comp_input_placeholder_color: black;\r\n    --input_comp_input_focus_outline: yellow;\r\n    --input_comp_input_focus_background: white;\r\n  }\r\n  .inputComp {\r\n    width: var(--input_comp_width);\r\n    font-family: var(--input_comp_font_family);\r\n  }\r\n  .inputComp_containerBox__above {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n  }\r\n  .inputComp_containerBox__below {\r\n    display: flex;\r\n    flex-direction: column-reverse;\r\n  }\r\n  .inputComp_containerBox__left {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n  .inputComp_headerBox {\r\n    align-self: center;\r\n    text-align: center;\r\n    color: var(--input_comp_heading_color);\r\n    font-size: var(--input_comp_heading_font_size);\r\n    font-weight: var(--input_comp_heading_font_weight);\r\n  }\r\n  .inputComp_input {\r\n    color: var(--input_comp_input_color);\r\n    background: var(--input_comp_input_background);\r\n    border-color: var(--input_comp_input_border_color);\r\n    font-size: var(--input_comp_input_font_size);\r\n    font-weight: var(--input_comp_input_font_weight);\r\n    padding: 0.4rem;\r\n  }\r\n  .inputComp_input:focus {\r\n    outline-color: var(--input_comp_input_focus_outline);\r\n    background-color: var(--input_comp_input_focus_background);\r\n  }\r\n  .inputComp_input:invalid {\r\n    background-color: red;\r\n  }\r\n  .inputComp_input::-webkit-input-placeholder {\r\n    color: var(--input_comp_input_placeholder_color);\r\n  }\r\n</style>","<template>\r\n  <div id=\"controlsDiv\">\r\n    <button-comp\r\n      :css-variables=\"buttonCssVariables\"\r\n      @button-comp-clicked=\"loadData\"\r\n    >\r\n      Load Data\r\n    </button-comp>\r\n    \r\n    <input-comp\r\n      heading=\"N Bins\"\r\n      input-type=\"number\"\r\n      :input-value=\"nbins_value\"\r\n      input-size=\"50\"\r\n      @input-comp-value-changed=\"value => {nbins = value}\"\r\n    />\r\n\r\n    <input-comp\r\n      heading=\"XMIN:\"\r\n      input-type=\"number\"\r\n      :input-value=\"xmin_value\"\r\n      input-size=\"50\"\r\n      @input-comp-value-changed=\"value => {xmin = value}\"\r\n    />\r\n\r\n    <input-comp\r\n      heading=\"XMAX:\"\r\n      input-type=\"number\"\r\n      :input-value=\"xmax_value\"\r\n      input-size=\"50\"\r\n      @input-comp-value-changed=\"value => {xmax = value}\"\r\n    />\r\n  </div>\r\n  \r\n  <div v-if=\"chartData\">\r\n    <histogram-comp-d3\r\n      :chart-data=\"chartData\"\r\n      x-var=\"arr_delay\"\r\n      title=\"Distribution of Airline Flight Arrival Delays\"\r\n      sub-title=\"Data source: flights14_reduced.csv\"\r\n      x-label=\"Delay (in minutes)\"\r\n      y-label=\"Count\"\r\n      :height=\"height\"\r\n      :x-min=\"xmin\"\r\n      :x-max=\"xmax\"\r\n      :n-bins=\"nbins\"\r\n      :y-tics=\"ytics\"\r\n      @histogram-comp-bins=\"nbinsChanged\"\r\n      @histogram-comp-xmin=\"xminChanged\"\r\n      @histogram-comp-xmax=\"xmaxChanged\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HistogramCompD3 from 'histogramcompd3';\r\nimport ButtonComp from 'buttoncomp'\r\nimport InputComp from 'inputcomp';\r\nimport {csv} from \"d3-fetch\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    HistogramCompD3,\r\n    ButtonComp,\r\n    InputComp\r\n  },\r\n  data() {\r\n    return {\r\n      chartData: null,\r\n      height: 700,\r\n      nbins: null,\r\n      xmin: null,\r\n      xmax: null,\r\n      nbins_value: null,\r\n      xmin_value: null,\r\n      xmax_value: null,\r\n      ytics: this.getYtics(),\r\n      buttonCssVariables: {\r\n        button_comp_font_size: '1.2rem',\r\n        button_comp_background: 'linear-gradient(to bottom, #a3ff33 0, #3cc72a 13%, #2eba1e 33%, #4bba37 64%, #4bba37 100%)',\r\n        button_comp_hover_background: 'linear-gradient(to bottom, #a3ff33 0, #4bba37 100%)'\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async loadData() {\r\n      this.chartData =  await csv('flights14_reduced.csv');\r\n    },\r\n    getYtics: function(){\r\n      const ytics = new Array(16);\r\n      let val = 0;\r\n      for(let i=0; i < 16; i++){\r\n        ytics[i] = val;\r\n        val += 200;\r\n      }\r\n      return(ytics);\r\n    },\r\n    nbinsChanged: function(value){\r\n      this.nbins_value = value;\r\n    },\r\n    xminChanged: function(value){\r\n      this.xmin_value = value;\r\n    },\r\n    xmaxChanged: function(value){\r\n      this.xmax_value = value;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n  #controlsDiv {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 1100px;\r\n    margin-top: 20px;\r\n  }\r\n</style>"],"names":[],"version":3,"file":"index.6a81de11.css.map"}