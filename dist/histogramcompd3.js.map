{"mappings":"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","sources":["src/HistogramCompD3.vue","src/NiceTicks.js"],"sourcesContent":["<template>\r\n  <div ref=\"chartDiv\" />\r\n</template>\r\n\r\n<script>\r\nimport NiceTicks from './NiceTicks';\r\nimport {select} from 'd3-selection';\r\nimport {extent, histogram, max} from 'd3-array';\r\nimport {scaleLinear} from 'd3-scale';\r\nimport {axisBottom, axisLeft} from 'd3-axis';\r\n\r\nexport default {\r\n  name: 'HistogramCompD3',\r\n  props: {\r\n    chartData: {\r\n      type: Array,\r\n      default: null\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    subTitle: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    titlesColor: {\r\n      type: String,\r\n      default: '#000000'\r\n    },\r\n    xLabel: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    yLabel: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    ticColor: {\r\n      type: String,\r\n      default: '#000000'\r\n    },\r\n    barFill: {\r\n      type: String,\r\n      default: '#69b3a2'\r\n    },\r\n    width: {\r\n      type: Number,\r\n      default: 800\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 650\r\n    },\r\n    marginLeft: {\r\n      type: Number,\r\n      default:60\r\n    },\r\n    marginTop: {\r\n      type: Number,\r\n      default: 30\r\n    },\r\n    marginBottom: {\r\n      type: Number,\r\n      default: 50\r\n    },\r\n    xVar: {\r\n      type: String,\r\n      default: null\r\n    },\r\n    xMin: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    xMax: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    nBins: {\r\n      type: Number,\r\n      default: null\r\n    },\r\n    yTics: {\r\n      type: Array,\r\n      default: null\r\n    }\r\n  },\r\n  emits: {\r\n    'histogramCompBins': null,\r\n    'histogramCompXmin': null,\r\n    'histogramCompXmax': null\r\n  },\r\n  data() {\r\n    return {\r\n      svg: null,\r\n      xAccessor: null,\r\n      ctrGroup: null,\r\n      ctrWidth: null,\r\n      ctrHeight: null,\r\n      xmin: null,\r\n      xmax: null,\r\n      nbins: null,\r\n      bins: null,\r\n      thresholdArr: null\r\n    };\r\n  },\r\n  watch: {\r\n    /*chartData(chartData){\r\n      console.log(`chartData changed: ${chartData.length}`);\r\n    },*/\r\n    nBins(nBins){\r\n      this.nbins = nBins;\r\n\r\n      //console.log(`Bins changed: ${this.nbins}`);\r\n\r\n      this.calculateThresholdArr(this.xmin,this.xmax,nBins);\r\n      this.drawXaxis();\r\n      this.drawYaxis();\r\n      this.drawBars();\r\n    },\r\n    xMin(xMin){\r\n      this.xmin = xMin;\r\n\r\n      //console.log(`xMin changed: ${this.xmin}`);\r\n\r\n      this.calculateThresholdArr(xMin, this.xmax, this.nbins);\r\n      this.drawXaxis();\r\n      this.drawYaxis();\r\n      this.drawBars();\r\n    },\r\n    xMax(xMax){\r\n      this.xmax = xMax;\r\n\r\n      //console.log(`xMax changed: ${this.xmax}`);\r\n\r\n      this.calculateThresholdArr(this.xmin, xMax, this.nbins);\r\n      this.drawXaxis();\r\n      this.drawYaxis();\r\n      this.drawBars();\r\n    }\r\n  },\r\n  mounted() {\r\n    if(this.chartData === null){\r\n      throw(new ReferenceError('Property chartData must be defined.'));\r\n    }\r\n    if(this.xVar === null){\r\n      throw(new ReferenceError('Property xVar must be defined.'))\r\n    }else {\r\n      this.xAccessor = (d) => +d[this.xVar];\r\n    }\r\n\r\n    let binwidth;\r\n    if(this.xMin === null || this.xMax === null) {\r\n      const xExtent = extent(this.chartData, this.xAccessor);\r\n      //console.log(`extent min: ${xExtent[0]} extent max: ${xExtent[1]}`);\r\n      const niceTicks = new NiceTicks(xExtent[0], xExtent[1], 10);\r\n      const ticksObj = niceTicks.calculate();\r\n\r\n      this.xmin = ticksObj.niceMin;\r\n      this.xmax = ticksObj.miceMax;\r\n      binwidth = ticksObj.tickSpacing;\r\n      this.nbins = (this.xmax - this.xmin) / binwidth;\r\n      this.$emit('histogramCompBins', this.nbins);\r\n      this.$emit('histogramCompXmin', this.xmin);\r\n      this.$emit('histogramCompXmax', this.xmax);\r\n    }else{\r\n      this.xmin = this.xMin;\r\n      this.xmax = this.xMax;\r\n      this.nbins = this.nBins;\r\n      binwidth = (this.xmax - this.xmin)/this.nbins;\r\n    }\r\n\r\n    //console.log(`xmin: ${this.xmin} xmax: ${this.xmax} nbins: ${this.nbins} binwidth: ${binwidth}`)\r\n\r\n    this.calculateThresholdArr(this.xmin, this.xmax, this.nbins);\r\n\r\n    this.drawTitles();\r\n    this.drawXaxis();\r\n    this.drawYaxis();\r\n    this.drawBars();\r\n  },\r\n  methods: {\r\n    // Create svg and add draw titles\r\n    drawTitles: function(){\r\n      const dimensions = {\r\n        width: this.width,\r\n        height: this.height,\r\n        margin: {\r\n          top: this.marginTop,\r\n          bottom: this.marginBottom,\r\n          left: this.marginLeft,\r\n          right: 10\r\n        }\r\n      };\r\n\r\n      this.svg = select(this.$refs.chartDiv)\r\n        .append('svg')\r\n        .attr('width', dimensions.width)\r\n        .attr('height', dimensions.height);\r\n\r\n      let currrentY = 0;\r\n      if(this.title !== null){\r\n        currrentY = currrentY + 40;\r\n        this.svg.append('text')\r\n          .attr('x', dimensions.width / 2)\r\n          .attr('y', currrentY)\r\n          .attr('fill', this.titlesColor)\r\n          .text(this.title)\r\n          .style('text-anchor', 'middle')\r\n          .style('font-size', '28px')\r\n          .style('font-weight', 'bold')\r\n      }\r\n      if(this.subTitle !== null){\r\n        currrentY = currrentY + 25;\r\n        this.svg.append('text')\r\n          .attr('x', dimensions.width / 2)\r\n          .attr('y', currrentY)\r\n          .attr('fill', this.titlesColor)\r\n          .text(this.subTitle)\r\n          .style('text-anchor', 'middle')\r\n          .style('font-size', '20px')\r\n          .style('font-weight', 'bold')\r\n      }\r\n      // Define dimensions of graph area and create/locate associated group\r\n      this.ctrWidth = dimensions.width - dimensions.margin.left - dimensions.margin.right;\r\n      this.ctrHeight = dimensions.height - dimensions.margin.top - dimensions.margin.bottom - currrentY;\r\n\r\n      this.ctrGroup = this.svg.append('g')\r\n        .attr('id', 'ctrGroup')\r\n        .attr(\r\n          'transform',\r\n          `translate(${dimensions.margin.left}, ${currrentY + dimensions.margin.top})`);\r\n    },\r\n\r\n    // Axes and Scales\r\n    // X axis: scale and draw\r\n    drawXaxis: function(){\r\n      select(\"#xAxisGroup\").remove();\r\n\r\n      this.xScale = scaleLinear()\r\n        .domain([this.xmin, this.xmax])\r\n        .rangeRound([0, this.ctrWidth]);\r\n\r\n      //console.log(`thresholdArr: ${this.thresholdArr}`);\r\n\r\n      const xAxis = axisBottom(this.xScale)\r\n        .tickValues(this.thresholdArr);\r\n\r\n      const xAxisGroup = this.ctrGroup.append('g')\r\n        .attr(\"id\", \"xAxisGroup\")\r\n        .style('transform', `translateY(${this.ctrHeight}px)`)\r\n        .style('font-size', '12px')\r\n        .call(xAxis);\r\n\r\n      xAxisGroup.append('text')\r\n        .attr('x', this.ctrWidth / 2)\r\n        .attr('y', this.marginBottom - 10)\r\n        .attr('fill', this.ticColor)\r\n        .text(this.xLabel)\r\n        .style('font-size', '16px')\r\n        .style('font-weight', 'bold');\r\n\r\n      const a_histogram = histogram()\r\n        .value(this.xAccessor)\r\n        .domain(this.xScale.domain())\r\n        .thresholds(this.thresholdArr.slice(0, this.thresholdArr.length - 1));\r\n\r\n      this.bins = a_histogram(this.chartData);\r\n    },\r\n\r\n    // Axes and Scales\r\n    // Y axis: scale and draw\r\n    drawYaxis: function(){\r\n      select(\"#yAxisGroup\").remove();\r\n\r\n      let yAxisGroup;\r\n      if(this.yTics === null){\r\n        const ymax = max(this.bins, d => d.length);\r\n        //console.log(`ymax: ${ymax}`)\r\n        this.yScale = scaleLinear()\r\n          .domain([0, ymax])\r\n          .range([this.ctrHeight, 0]);\r\n        yAxisGroup = this.ctrGroup.append('g')\r\n          .attr(\"id\", \"yAxisGroup\")\r\n          .style('font-size', '12px')\r\n          .call(axisLeft(this.yScale));\r\n      }else {\r\n        const lastIdx = this.yTics.length - 1;\r\n        this.yScale = scaleLinear()\r\n          .domain([this.yTics[0], this.yTics[lastIdx]])\r\n          .range([this.ctrHeight, 0]);\r\n        const yAxis = axisLeft(this.yScale)\r\n          .tickValues(this.yTics);\r\n        yAxisGroup = this.ctrGroup.append('g')\r\n          .attr(\"id\", \"yAxisGroup\")\r\n          .style('font-size', '12px')\r\n          .call(yAxis);\r\n      }\r\n\r\n      yAxisGroup.append('text')\r\n        .attr('x', -this.ctrHeight / 2)\r\n        .attr('y', -this.marginLeft + 15)\r\n        .attr('fill', this.ticColor)\r\n        .html(this.yLabel)\r\n        .style('transform', 'rotate(270deg)')\r\n        .style('text-anchor', 'middle')\r\n        .style('font-size', '16px')\r\n        .style('font-weight', 'bold')\r\n\r\n      yAxisGroup.style('color', this.ticColor)\r\n    },\r\n\r\n    drawBars: function(){\r\n      select('#barsGroup').remove();\r\n\r\n      const barsGroup = this.ctrGroup.append('g')\r\n        .attr(\"id\", \"barsGroup\")\r\n      // Append bar rectangles\r\n      const ctrHeight = this.ctrHeight;\r\n      const xScale = this.xScale;\r\n      const yScale = this.yScale;\r\n      barsGroup.selectAll('rect')\r\n        .data(this.bins)\r\n        .join(\r\n          enter => {\r\n            return enter.append('rect')\r\n          },\r\n          exit => exit.remove()\r\n        )\r\n        .attr('x', 1)\r\n        .attr('transform', function(d) {\r\n          return `translate(${xScale(d.x0)}, ${yScale(d.length)})`\r\n        })\r\n        .attr('width', function(d) {\r\n          return xScale(d.x1) - xScale(d.x0) - 1\r\n        })\r\n        .attr('height', function(d) {\r\n          return ctrHeight - yScale(d.length)\r\n        })\r\n        .style('fill', this.barFill);\r\n    },\r\n    calculateThresholdArr: function(xmin, xmax, nbins){\r\n      this.thresholdArr = new Array(nbins + 1);\r\n      const binwidth = (xmax - xmin)/nbins;\r\n      for (let i = 0; i < nbins + 1; i++) {\r\n        this.thresholdArr[i] = xmin + binwidth * i\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n","/**\r\n * Created by Rick on 2022-05-18.\r\n */\r\n'use strict';\r\nexport default class NiceTicks {\r\n  constructor(min, max, maxTicks) {\r\n    this.min = min;\r\n    this.max = max;\r\n    this.maxTicks = maxTicks;\r\n  }\r\n\r\n  niceNumber(range, round){\r\n    const exp = Math.floor(Math.log10(range));\r\n    const frac = range / Math.pow(10, exp);\r\n    let niceFrac;\r\n    if(round){\r\n      if(frac < 1.5) niceFrac = 1\r\n      else if(frac <= 3) niceFrac = 2\r\n      else if(frac <= 7) niceFrac = 5\r\n      else niceFrac = 10;\r\n    }else {\r\n      if(frac < 1) niceFrac = 1\r\n      else if(frac <= 2) niceFrac = 2\r\n      else if(frac <= 5) niceFrac = 5\r\n      else niceFrac = 10;\r\n    }\r\n    return (niceFrac * Math.pow(10, exp))\r\n  }\r\n\r\n  calculate(){\r\n    const range = this.niceNumber(this.max - this.min, false);\r\n    const tickSpacing = this.niceNumber(range / (this.maxTicks - 1), true);\r\n    const niceMin = Math.floor(this.min / tickSpacing) * tickSpacing;\r\n    const niceMax = Math.ceil(this.max / tickSpacing) * tickSpacing;\r\n\r\n    return({\r\n      tickSpacing: tickSpacing,\r\n      niceMin: niceMin,\r\n      miceMax: niceMax\r\n    })\r\n  }\r\n}"],"names":[],"version":3,"file":"histogramcompd3.js.map"}